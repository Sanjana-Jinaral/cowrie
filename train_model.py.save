import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import classification_report

df = pd.read_csv("cowrie_data.csv")
df['label'] = df['event'].apply(lambda x: 1 if 'failed' in x else 0)
df['user_enc'] = LabelEncoder().fit_transform(df['import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import classification_report

df = pd.read_csv("cowrie_login_events.csv")
df['label'] = df['event'].apply(lambda x: 1 if x == "cowrie.login.failed" else 0)

le = LabelEncoder()
df['user_encoded'] = le.fit_transform(df['username'].astype(str))

X = df[['user_encoded']]
y = df['label']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)

model = RandomForestClassifier()
model.fit(X_train, y_train)

preds = model.predict(X_test)
print(classification_report(y_test, preds))
